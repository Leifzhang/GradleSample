apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "kronos.library"
apply plugin: "kronos.a8"

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.kronos.sample.gradle"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation libs.compat
    implementation libs.core.ktx
    implementation module.module1
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.1'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    def allLibs = getFromToml("libs")
    allLibs.each {
        logger.lifecycle("allLibs   key:" + it.key + " value: " + it.value)
    }
//    implementation dep.okhttp
}
a8 {
    rules = file("../.buildscripts/a8_rules.txt")
}


def getFromToml(String name) {
    def libz = rootProject.extensions
            .getByType(VersionCatalogsExtension).named(name)
    HashMap<String, String> deps = new HashMap<>()
    libz.getDependencyAliases().each {
        deps.put(it, libz.findLibrary(it).get().get().toString())
    }


    return deps
}